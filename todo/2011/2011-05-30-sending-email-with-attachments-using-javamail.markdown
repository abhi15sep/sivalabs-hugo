---
author: siva
comments: true
date: 2011-05-30 08:02:00+00:00
layout: post
slug: sending-email-with-attachments-using-javamail
title: Sending Email with Attachments using JavaMail
wordpress_id: 272
categories:
- Java
- JavaMail
tags:
- Java
- JavaMail
---

We can send emails using JavaMail API.   
Instead of directly using JavaMail API here is a small utility to send emails which shields the user from JavaMail internals.  
  
**EmailConfiguration.java**  
  

    
    package com.sivalabs.email;<br></br>import java.util.Properties;<br></br><br></br>public class EmailConfiguration<br></br>{<br></br> private Properties properties = new Properties();<br></br> <br></br> public static final String SMTP_HOST = "mail.smtp.host";<br></br> public static final String SMTP_AUTH = "mail.smtp.auth";<br></br> public static final String SMTP_TLS_ENABLE = "mail.smtp.starttls.enable";<br></br> public static final String SMTP_AUTH_USER = "smtp.auth.user";<br></br> public static final String SMTP_AUTH_PWD = "smtp.auth.pwd";<br></br> public static final String DEBUG = "debug";<br></br> <br></br> public Properties getProperties()<br></br> {<br></br>  return this.properties;<br></br> }<br></br> <br></br> public void setProperty(String key, String value)<br></br> {<br></br>  this.properties.put(key, value);<br></br> }<br></br> <br></br> public void addProperties(Properties props)<br></br> {<br></br>  this.properties.putAll(props);<br></br> }<br></br> <br></br> public String getProperty(String key)<br></br> {<br></br>  return this.properties.getProperty(key);<br></br> }<br></br>}<br></br>

  
**Email.java**  
  

    
    package com.sivalabs.email;<br></br>import java.util.ArrayList;<br></br>import java.util.List;<br></br><br></br>public class Email <br></br>{<br></br> private String from;<br></br> private String[] to;<br></br> private String[] cc;<br></br> private String[] bcc;<br></br> private String subject;<br></br> private String text;<br></br> private String mimeType;<br></br> private List<Attachment> attachments = new ArrayList<Attachment>();<br></br> <br></br> public String getFrom()<br></br> {<br></br>  return from;<br></br> }<br></br> public void setFrom(String from)<br></br> {<br></br>  this.from = from;<br></br> }<br></br> public String[] getTo()<br></br> {<br></br>  return to;<br></br> }<br></br> public void setTo(String... to)<br></br> {<br></br>  this.to = to;<br></br> }<br></br> public String[] getCc()<br></br> {<br></br>  return cc;<br></br> }<br></br> public void setCc(String... cc)<br></br> {<br></br>  this.cc = cc;<br></br> }<br></br> public String[] getBcc()<br></br> {<br></br>  return bcc;<br></br> }<br></br> public void setBcc(String... bcc)<br></br> {<br></br>  this.bcc = bcc;<br></br> }<br></br> public String getSubject()<br></br> {<br></br>  return subject;<br></br> }<br></br> public void setSubject(String subject)<br></br> {<br></br>  this.subject = subject;<br></br> }<br></br> public String getText()<br></br> {<br></br>  return text;<br></br> }<br></br> public void setText(String text)<br></br> {<br></br>  this.text = text;<br></br> }<br></br> public String getMimeType()<br></br> {<br></br>  return mimeType;<br></br> }<br></br> public void setMimeType(String mimeType)<br></br> {<br></br>  this.mimeType = mimeType;<br></br> }<br></br> public List<Attachment> getAttachments()<br></br> {<br></br>  return attachments;<br></br> }<br></br> public void addAttachments(List<Attachment> attachments)<br></br> {<br></br>  this.attachments.addAll(attachments);<br></br> }<br></br> public void addAttachment(Attachment attachment)<br></br> {<br></br>  this.attachments.add(attachment);<br></br> }<br></br> public void removeAttachment(int index)<br></br> {<br></br>  this.attachments.remove(index);<br></br> }<br></br> public void removeAllAttachments()<br></br> {<br></br>  this.attachments.clear();<br></br> }<br></br>}<br></br>

  
**Attachment.java**  
  

    
    package com.sivalabs.email;<br></br><br></br>public class Attachment<br></br>{<br></br> private byte[] data;<br></br> private String filename;<br></br> private String mimeType;<br></br> <br></br> public Attachment()<br></br> {<br></br> }<br></br> <br></br> public Attachment(byte[] data, String filename, String mimeType)<br></br> {<br></br>  super();<br></br>  this.data = data;<br></br>  this.filename = filename;<br></br>  this.mimeType = mimeType;<br></br> }<br></br><br></br> public byte[] getData()<br></br> {<br></br>  return data;<br></br> }<br></br> public void setData(byte[] data)<br></br> {<br></br>  this.data = data;<br></br> }<br></br> public String getFilename()<br></br> {<br></br>  return filename;<br></br> }<br></br> public void setFilename(String filename)<br></br> {<br></br>  this.filename = filename;<br></br> }<br></br><br></br> public String getMimeType()<br></br> {<br></br>  return mimeType;<br></br> }<br></br><br></br> public void setMimeType(String mimeType)<br></br> {<br></br>  this.mimeType = mimeType;<br></br> }<br></br> <br></br>}<br></br>

  
**EmailService.java**  
  

    
    package com.sivalabs.email;<br></br><br></br>import java.util.List;<br></br><br></br>import javax.activation.DataHandler;<br></br>import javax.activation.DataSource;<br></br>import javax.mail.Authenticator;<br></br>import javax.mail.BodyPart;<br></br>import javax.mail.Message;<br></br>import javax.mail.MessagingException;<br></br>import javax.mail.Multipart;<br></br>import javax.mail.PasswordAuthentication;<br></br>import javax.mail.Session;<br></br>import javax.mail.Transport;<br></br>import javax.mail.internet.AddressException;<br></br>import javax.mail.internet.InternetAddress;<br></br>import javax.mail.internet.MimeBodyPart;<br></br>import javax.mail.internet.MimeMessage;<br></br>import javax.mail.internet.MimeMultipart;<br></br>import javax.mail.util.ByteArrayDataSource;<br></br><br></br>public class EmailService <br></br>{<br></br> private EmailConfiguration configuration = null;<br></br> private Authenticator auth =null;<br></br> <br></br> public EmailService(EmailConfiguration configuration)<br></br> {<br></br>  this.configuration = configuration;<br></br>  this.auth = this.buildSmtpAuthenticator();     <br></br> }<br></br> <br></br> private Authenticator buildSmtpAuthenticator()<br></br> {<br></br>  String emailId = configuration.getProperty(EmailConfiguration.SMTP_AUTH_USER);<br></br>  String password = configuration.getProperty(EmailConfiguration.SMTP_AUTH_PWD);<br></br>  return new SMTPAuthenticator(emailId, password);<br></br> }<br></br> <br></br> public void sendEmail(Email email)<br></br> {<br></br>  Session session = Session.getDefaultInstance(this.configuration.getProperties(), auth);<br></br>  boolean debug = Boolean.valueOf(this.configuration.getProperty(EmailConfiguration.DEBUG));<br></br>     session.setDebug(debug);<br></br>     <br></br>     try <br></br>     {<br></br>      Message msg = this.buildEmailMessage(session, email);<br></br>   Transport.send(msg);<br></br>  } <br></br>     catch (MessagingException e) <br></br>  {<br></br>   throw new RuntimeException(e);<br></br>  }     <br></br> }<br></br> <br></br> private Message buildEmailMessage(Session session, Email email) throws MessagingException<br></br> {<br></br>  Message msg = new MimeMessage(session);<br></br>     msg.setSubject(email.getSubject());<br></br>     this.addRecievers(msg, email);<br></br>     Multipart multipart = new MimeMultipart();<br></br>     this.addMessageBodyPart(multipart, email);<br></br>     this.addAttachments(multipart, email);   <br></br>        msg.setContent(multipart);<br></br>     return msg;<br></br> }<br></br> <br></br> private void addRecievers(Message msg, Email email) throws MessagingException<br></br> {<br></br>  InternetAddress from = new InternetAddress(email.getFrom());<br></br>     msg.setFrom(from);<br></br>     <br></br>     InternetAddress[] to = this.getInternetAddresses(email.getTo());<br></br>     msg.setRecipients(Message.RecipientType.TO, to);<br></br><br></br>     InternetAddress[] cc = this.getInternetAddresses(email.getCc());<br></br>     msg.setRecipients(Message.RecipientType.CC, cc);<br></br><br></br>     InternetAddress[] bcc = this.getInternetAddresses(email.getBcc());<br></br>     msg.setRecipients(Message.RecipientType.BCC, bcc);<br></br><br></br> }<br></br> private void addMessageBodyPart(Multipart multipart, Email email) throws MessagingException<br></br> {<br></br>   BodyPart messageBodyPart = new MimeBodyPart();<br></br>   messageBodyPart.setContent(email.getText(), email.getMimeType());      <br></br>   multipart.addBodyPart(messageBodyPart);      <br></br> }<br></br> private void addAttachments(Multipart multipart, Email email) throws MessagingException<br></br> {<br></br>  List<Attachment> attachments = email.getAttachments();<br></br>     if(attachments != null && attachments.size() > 0)<br></br>     {<br></br>      for (Attachment attachment : attachments) <br></br>      {<br></br>       BodyPart attachmentBodyPart = new MimeBodyPart();<br></br>          String filename = attachment.getFilename() ;<br></br>          DataSource source = new ByteArrayDataSource(attachment.getData(), <br></br>                 attachment.getMimeType());<br></br>          attachmentBodyPart.setDataHandler(new DataHandler(source));<br></br>          attachmentBodyPart.setFileName(filename);<br></br>          multipart.addBodyPart(attachmentBodyPart);<br></br>   }<br></br>     }  <br></br> }<br></br> private InternetAddress[] getInternetAddresses(String... addresses) <br></br>       throws AddressException<br></br> {<br></br>  if(addresses == null || addresses.length == 0)<br></br>  {<br></br>   return null;<br></br>  }<br></br>  InternetAddress[] iAddresses = new InternetAddress[addresses.length];<br></br>     for (int i = 0; i < addresses.length; i++)<br></br>     {<br></br>      iAddresses[i] = new InternetAddress(addresses[i]);<br></br>     }<br></br>     return iAddresses;<br></br> }<br></br>}<br></br><br></br>class SMTPAuthenticator extends javax.mail.Authenticator<br></br>{<br></br> private String username;<br></br> private String password;<br></br> <br></br>    public SMTPAuthenticator(String username, String password) {<br></br>  this.username = username;<br></br>  this.password = password;<br></br> }<br></br>    <br></br> public PasswordAuthentication getPasswordAuthentication()<br></br>    {<br></br>        return new PasswordAuthentication(username, password);<br></br>    }<br></br>}<br></br>

Add the mail.jar, activation.jar to the classpath. Here is the TestClient on how to use the EmailService Utility.  
    
    package com.sivalabs.email;<br></br><br></br>public class EmailClient<br></br>{<br></br> public static void main(String[] args)<br></br> {<br></br>  EmailConfiguration configuration = new EmailConfiguration();<br></br>  configuration.setProperty(EmailConfiguration.SMTP_HOST, "smtp.gmail.com");<br></br>  configuration.setProperty(EmailConfiguration.SMTP_AUTH, "true");<br></br>  configuration.setProperty(EmailConfiguration.SMTP_TLS_ENABLE, "true");<br></br>  configuration.setProperty(EmailConfiguration.SMTP_AUTH_USER, "xyz@gmail.com");<br></br>  configuration.setProperty(EmailConfiguration.SMTP_AUTH_PWD, "**********");<br></br>  <br></br>  EmailService emailService = new EmailService(configuration);<br></br>  Email email = new Email();<br></br>  email.setFrom("sivaprasadreddy.k@gmail.com");<br></br>  email.setTo("sivaprasadreddy_k@yahoo.co.in");<br></br>  email.setCc("sivaprasadreddy.k@gmail.com");<br></br>  <br></br>  email.setSubject("Test Mail from SivaLabs");<br></br>  email.setText("Hi, <h1>This is a test email from Siva Labs</h1>");<br></br>  email.setMimeType("text/html");<br></br>  <br></br>  Attachment attachment1 = new Attachment("ABCDEFGH".getBytes(), "test1.txt","text/plain");<br></br>  email.addAttachment(attachment1);<br></br>  <br></br>  Attachment attachment2 = new Attachment("XYZZZZZZ".getBytes(), "test2.txt","text/plain");<br></br>  email.addAttachment(attachment2);<br></br>  <br></br>  emailService.sendEmail(email);<br></br>  <br></br> }<br></br><br></br>}<br></br>
